/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RevShareLicenseManager,
  RevShareLicenseManagerInterface,
} from "../RevShareLicenseManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
      {
        internalType: "address",
        name: "squadNftAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "minSharePercentage",
        type: "uint8",
      },
    ],
    name: "NFTRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "NFTUnregistered",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
        ],
        internalType: "struct IERC721Squad.TokenData",
        name: "data",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "minSharePercentage",
        type: "uint8",
      },
    ],
    name: "createAndRegisterNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "minSharePercentages",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "minSharePercentage",
        type: "uint8",
      },
    ],
    name: "registerNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registeredNFTs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "squadNft",
    outputs: [
      {
        internalType: "contract IERC721Squad",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "unregisterNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015ee380380620015ee8339818101604052810190620000379190620001e2565b81818160009080519060200190620000519291906200009d565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200041a565b828054620000ab9062000311565b90600052602060002090601f016020900481019282620000cf57600085556200011b565b82601f10620000ea57805160ff19168380011785556200011b565b828001600101855582156200011b579182015b828111156200011a578251825591602001919060010190620000fd565b5b5090506200012a91906200012e565b5090565b5b80821115620001495760008160009055506001016200012f565b5090565b6000620001646200015e8462000271565b62000248565b905082815260208101848484011115620001835762000182620003e0565b5b62000190848285620002db565b509392505050565b600081519050620001a98162000400565b92915050565b600082601f830112620001c757620001c6620003db565b5b8151620001d98482602086016200014d565b91505092915050565b60008060408385031215620001fc57620001fb620003ea565b5b600083015167ffffffffffffffff8111156200021d576200021c620003e5565b5b6200022b85828601620001af565b92505060206200023e8582860162000198565b9150509250929050565b60006200025462000267565b905062000262828262000347565b919050565b6000604051905090565b600067ffffffffffffffff8211156200028f576200028e620003ac565b5b6200029a82620003ef565b9050602081019050919050565b6000620002b482620002bb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620002fb578082015181840152602081019050620002de565b838111156200030b576000848401525b50505050565b600060028204905060018216806200032a57607f821691505b602082108114156200034157620003406200037d565b5b50919050565b6200035282620003ef565b810181811067ffffffffffffffff82111715620003745762000373620003ac565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200040b81620002a7565b81146200041757600080fd5b50565b6111c4806200042a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637b30e4981161005b5780637b30e49814610113578063a3f4df7e14610131578063b1db6ac91461014f578063e5d1420f1461017f57610088565b8063010f79121461008d57806319fda754146100a9578063453797bd146100c55780637284e416146100f5575b600080fd5b6100a760048036038101906100a29190610a20565b61019b565b005b6100c360048036038101906100be9190610acf565b610282565b005b6100df60048036038101906100da9190610a8f565b6104d4565b6040516100ec9190610e89565b60405180910390f35b6100fd610503565b60405161010a9190610dcc565b60405180910390f35b61011b610591565b6040516101289190610db1565b60405180910390f35b6101396105b7565b6040516101469190610dcc565b60405180910390f35b61016960048036038101906101649190610a8f565b6105f0565b6040516101769190610d96565b60405180910390f35b61019960048036038101906101949190610a8f565b61061f565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f8bb00285856040518363ffffffff1660e01b81526004016101fa929190610cf8565b602060405180830381600087803b15801561021457600080fd5b505af1158015610228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024c9190610b36565b905061027c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828685610282565b50505050565b8173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016102d29190610e6e565b60206040518083038186803b1580156102ea57600080fd5b505afa1580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032291906109f3565b73ffffffffffffffffffffffffffffffffffffffff1614610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f90610dee565b60405180910390fd5b60648160ff1611156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690610e4e565b60405180910390fd5b80600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff0219169083151502179055507f144a22f8d0c6a99832f1d787509308679679e649329820250dfeb2e6e5544780848484846040516104c69493929190610d51565b60405180910390a150505050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000805461051090610fef565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90610fef565b80156105895780601f1061055e57610100808354040283529160200191610589565b820191906000526020600020905b81548152906001019060200180831161056c57829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280601681526020017f52657653686172654c6963656e73654d616e616765720000000000000000000081525081565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b818160011515600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff161515146106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90610e0e565b60405180910390fd5b83833373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016107179190610e6e565b60206040518083038186803b15801561072f57600080fd5b505afa158015610743573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076791906109f3565b73ffffffffffffffffffffffffffffffffffffffff16146107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490610e2e565b60405180910390fd5b60011515600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060009054906101000a900460ff16151514610861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085890610e0e565b60405180910390fd5b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060006101000a81549060ff02191690556000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa20455ca4b30865bf505833372c8e36978882830fc9bdabecc93469750fc55e3868660405161095b929190610d28565b60405180910390a1505050505050565b60008135905061097a81611149565b92915050565b60008151905061098f81611149565b92915050565b6000604082840312156109ab576109aa611055565b5b81905092915050565b6000813590506109c381611160565b92915050565b6000815190506109d881611160565b92915050565b6000813590506109ed81611177565b92915050565b600060208284031215610a0957610a08611069565b5b6000610a1784828501610980565b91505092915050565b600080600060608486031215610a3957610a38611069565b5b6000610a478682870161096b565b935050602084013567ffffffffffffffff811115610a6857610a6761105f565b5b610a7486828701610995565b9250506040610a85868287016109de565b9150509250925092565b60008060408385031215610aa657610aa5611069565b5b6000610ab48582860161096b565b9250506020610ac5858286016109b4565b9150509250929050565b60008060008060808587031215610ae957610ae8611069565b5b6000610af78782880161096b565b9450506020610b08878288016109b4565b9350506040610b198782880161096b565b9250506060610b2a878288016109de565b91505092959194509250565b600060208284031215610b4c57610b4b611069565b5b6000610b5a848285016109c9565b91505092915050565b610b6c81610f34565b82525050565b610b7b81610f46565b82525050565b610b8a81610f89565b82525050565b6000610b9c8385610eaf565b9350610ba9838584610fad565b610bb28361106e565b840190509392505050565b6000610bc882610ea4565b610bd28185610ec0565b9350610be2818560208601610fbc565b610beb8161106e565b840191505092915050565b6000610c03601c83610ec0565b9150610c0e8261107f565b602082019050919050565b6000610c26601383610ec0565b9150610c31826110a8565b602082019050919050565b6000610c49602083610ec0565b9150610c54826110d1565b602082019050919050565b6000610c6c602483610ec0565b9150610c77826110fa565b604082019050919050565b600060408301610c956000840184610ed1565b8583036000870152610ca8838284610b90565b92505050610cb96020840184610ed1565b8583036020870152610ccc838284610b90565b925050508091505092915050565b610ce381610f72565b82525050565b610cf281610f7c565b82525050565b6000604082019050610d0d6000830185610b63565b8181036020830152610d1f8184610c82565b90509392505050565b6000604082019050610d3d6000830185610b63565b610d4a6020830184610cda565b9392505050565b6000608082019050610d666000830187610b63565b610d736020830186610cda565b610d806040830185610b63565b610d8d6060830184610ce9565b95945050505050565b6000602082019050610dab6000830184610b72565b92915050565b6000602082019050610dc66000830184610b81565b92915050565b60006020820190508181036000830152610de68184610bbd565b905092915050565b60006020820190508181036000830152610e0781610bf6565b9050919050565b60006020820190508181036000830152610e2781610c19565b9050919050565b60006020820190508181036000830152610e4781610c3c565b9050919050565b60006020820190508181036000830152610e6781610c5f565b9050919050565b6000602082019050610e836000830184610cda565b92915050565b6000602082019050610e9e6000830184610ce9565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60008083356001602003843603038112610eee57610eed611064565b5b83810192508235915060208301925067ffffffffffffffff821115610f1657610f15611050565b5b600182023603841315610f2c57610f2b61105a565b5b509250929050565b6000610f3f82610f52565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000610f9482610f9b565b9050919050565b6000610fa682610f52565b9050919050565b82818337600083830152505050565b60005b83811015610fda578082015181840152602081019050610fbf565b83811115610fe9576000848401525b50505050565b6000600282049050600182168061100757607f821691505b6020821081141561101b5761101a611021565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f52656769737472616e7420646f6573206e6f74206f776e204e46542e00000000600082015250565b7f4e4654206e6f7420726567697374657265642e00000000000000000000000000600082015250565b7f4d6573736167652073656e64657220646f6573206e6f74206f776e204e46542e600082015250565b7f6d696e536861726550657263656e746167652067726561746572207468616e2060008201527f3130302e00000000000000000000000000000000000000000000000000000000602082015250565b61115281610f34565b811461115d57600080fd5b50565b61116981610f72565b811461117457600080fd5b50565b61118081610f7c565b811461118b57600080fd5b5056fea26469706673582212203fdb65327d7b622b5a3de946d53b6df7cc906f451c664eab1aea0e630bbde5ee64736f6c63430008050033";

export class RevShareLicenseManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    description_: string,
    squadNftAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RevShareLicenseManager> {
    return super.deploy(
      description_,
      squadNftAddress,
      overrides || {}
    ) as Promise<RevShareLicenseManager>;
  }
  getDeployTransaction(
    description_: string,
    squadNftAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      description_,
      squadNftAddress,
      overrides || {}
    );
  }
  attach(address: string): RevShareLicenseManager {
    return super.attach(address) as RevShareLicenseManager;
  }
  connect(signer: Signer): RevShareLicenseManager__factory {
    return super.connect(signer) as RevShareLicenseManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevShareLicenseManagerInterface {
    return new utils.Interface(_abi) as RevShareLicenseManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevShareLicenseManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RevShareLicenseManager;
  }
}
